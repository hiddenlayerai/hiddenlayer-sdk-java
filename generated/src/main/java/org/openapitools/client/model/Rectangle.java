/*
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.PropertyBag;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * An area within an image.
 */
@JsonPropertyOrder({
  Rectangle.JSON_PROPERTY_TOP,
  Rectangle.JSON_PROPERTY_LEFT,
  Rectangle.JSON_PROPERTY_BOTTOM,
  Rectangle.JSON_PROPERTY_RIGHT,
  Rectangle.JSON_PROPERTY_MESSAGE,
  Rectangle.JSON_PROPERTY_PROPERTIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-17T20:22:10.182839Z[GMT]", comments = "Generator version: 7.6.0")
public class Rectangle {
  public static final String JSON_PROPERTY_TOP = "top";
  private BigDecimal top;

  public static final String JSON_PROPERTY_LEFT = "left";
  private BigDecimal left;

  public static final String JSON_PROPERTY_BOTTOM = "bottom";
  private BigDecimal bottom;

  public static final String JSON_PROPERTY_RIGHT = "right";
  private BigDecimal right;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<Message> message = JsonNullable.<Message>undefined();

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private PropertyBag properties;

  public Rectangle() { 
  }

  public Rectangle top(BigDecimal top) {
    this.top = top;
    return this;
  }

   /**
   * The Y coordinate of the top edge of the rectangle, measured in the image&#39;s natural units.
   * @return top
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTop() {
    return top;
  }


  @JsonProperty(JSON_PROPERTY_TOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTop(BigDecimal top) {
    this.top = top;
  }


  public Rectangle left(BigDecimal left) {
    this.left = left;
    return this;
  }

   /**
   * The X coordinate of the left edge of the rectangle, measured in the image&#39;s natural units.
   * @return left
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLeft() {
    return left;
  }


  @JsonProperty(JSON_PROPERTY_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeft(BigDecimal left) {
    this.left = left;
  }


  public Rectangle bottom(BigDecimal bottom) {
    this.bottom = bottom;
    return this;
  }

   /**
   * The Y coordinate of the bottom edge of the rectangle, measured in the image&#39;s natural units.
   * @return bottom
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOTTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBottom() {
    return bottom;
  }


  @JsonProperty(JSON_PROPERTY_BOTTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBottom(BigDecimal bottom) {
    this.bottom = bottom;
  }


  public Rectangle right(BigDecimal right) {
    this.right = right;
    return this;
  }

   /**
   * The X coordinate of the right edge of the rectangle, measured in the image&#39;s natural units.
   * @return right
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRight() {
    return right;
  }


  @JsonProperty(JSON_PROPERTY_RIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRight(BigDecimal right) {
    this.right = right;
  }


  public Rectangle message(Message message) {
    this.message = JsonNullable.<Message>of(message);
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Message getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Message> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<Message> message) {
    this.message = message;
  }

  public void setMessage(Message message) {
    this.message = JsonNullable.<Message>of(message);
  }


  public Rectangle properties(PropertyBag properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyBag getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(PropertyBag properties) {
    this.properties = properties;
  }


  /**
   * Return true if this rectangle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rectangle rectangle = (Rectangle) o;
    return Objects.equals(this.top, rectangle.top) &&
        Objects.equals(this.left, rectangle.left) &&
        Objects.equals(this.bottom, rectangle.bottom) &&
        Objects.equals(this.right, rectangle.right) &&
        equalsNullable(this.message, rectangle.message) &&
        Objects.equals(this.properties, rectangle.properties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(top, left, bottom, right, hashCodeNullable(message), properties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rectangle {\n");
    sb.append("    top: ").append(toIndentedString(top)).append("\n");
    sb.append("    left: ").append(toIndentedString(left)).append("\n");
    sb.append("    bottom: ").append(toIndentedString(bottom)).append("\n");
    sb.append("    right: ").append(toIndentedString(right)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `top` to the URL query string
    if (getTop() != null) {
      joiner.add(String.format("%stop%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTop()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `left` to the URL query string
    if (getLeft() != null) {
      joiner.add(String.format("%sleft%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLeft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `bottom` to the URL query string
    if (getBottom() != null) {
      joiner.add(String.format("%sbottom%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBottom()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `right` to the URL query string
    if (getRight() != null) {
      joiner.add(String.format("%sright%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRight()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `message` to the URL query string
    if (getMessage() != null) {
      joiner.add(getMessage().toUrlQueryString(prefix + "message" + suffix));
    }

    // add `properties` to the URL query string
    if (getProperties() != null) {
      joiner.add(String.format("%sproperties%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProperties()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

