/*
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.openapitools.client.model.ArtifactLocation;
import org.openapitools.client.model.MultiformatMessageString;
import org.openapitools.client.model.PropertyBag;
import org.openapitools.client.model.ReportingDescriptor;
import org.openapitools.client.model.ToolComponentReference;
import org.openapitools.client.model.TranslationMetadata;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ToolComponent
 */
class ToolComponentTest {
    private final ToolComponent model = new ToolComponent();

    /**
     * Model tests for ToolComponent
     */
    @Test
    void testToolComponent() {
        // TODO: test ToolComponent
    }

    /**
     * Test the property 'guid'
     */
    @Test
    void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'organization'
     */
    @Test
    void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'product'
     */
    @Test
    void productTest() {
        // TODO: test product
    }

    /**
     * Test the property 'productSuite'
     */
    @Test
    void productSuiteTest() {
        // TODO: test productSuite
    }

    /**
     * Test the property 'shortDescription'
     */
    @Test
    void shortDescriptionTest() {
        // TODO: test shortDescription
    }

    /**
     * Test the property 'fullDescription'
     */
    @Test
    void fullDescriptionTest() {
        // TODO: test fullDescription
    }

    /**
     * Test the property 'fullName'
     */
    @Test
    void fullNameTest() {
        // TODO: test fullName
    }

    /**
     * Test the property 'version'
     */
    @Test
    void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'semanticVersion'
     */
    @Test
    void semanticVersionTest() {
        // TODO: test semanticVersion
    }

    /**
     * Test the property 'dottedQuadFileVersion'
     */
    @Test
    void dottedQuadFileVersionTest() {
        // TODO: test dottedQuadFileVersion
    }

    /**
     * Test the property 'releaseDateUtc'
     */
    @Test
    void releaseDateUtcTest() {
        // TODO: test releaseDateUtc
    }

    /**
     * Test the property 'downloadUri'
     */
    @Test
    void downloadUriTest() {
        // TODO: test downloadUri
    }

    /**
     * Test the property 'informationUri'
     */
    @Test
    void informationUriTest() {
        // TODO: test informationUri
    }

    /**
     * Test the property 'globalMessageStrings'
     */
    @Test
    void globalMessageStringsTest() {
        // TODO: test globalMessageStrings
    }

    /**
     * Test the property 'notifications'
     */
    @Test
    void notificationsTest() {
        // TODO: test notifications
    }

    /**
     * Test the property 'rules'
     */
    @Test
    void rulesTest() {
        // TODO: test rules
    }

    /**
     * Test the property 'taxa'
     */
    @Test
    void taxaTest() {
        // TODO: test taxa
    }

    /**
     * Test the property 'locations'
     */
    @Test
    void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'language'
     */
    @Test
    void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'contents'
     */
    @Test
    void contentsTest() {
        // TODO: test contents
    }

    /**
     * Test the property 'isComprehensive'
     */
    @Test
    void isComprehensiveTest() {
        // TODO: test isComprehensive
    }

    /**
     * Test the property 'localizedDataSemanticVersion'
     */
    @Test
    void localizedDataSemanticVersionTest() {
        // TODO: test localizedDataSemanticVersion
    }

    /**
     * Test the property 'minimumRequiredLocalizedDataSemanticVersion'
     */
    @Test
    void minimumRequiredLocalizedDataSemanticVersionTest() {
        // TODO: test minimumRequiredLocalizedDataSemanticVersion
    }

    /**
     * Test the property 'associatedComponent'
     */
    @Test
    void associatedComponentTest() {
        // TODO: test associatedComponent
    }

    /**
     * Test the property 'translationMetadata'
     */
    @Test
    void translationMetadataTest() {
        // TODO: test translationMetadata
    }

    /**
     * Test the property 'supportedTaxonomies'
     */
    @Test
    void supportedTaxonomiesTest() {
        // TODO: test supportedTaxonomies
    }

    /**
     * Test the property 'properties'
     */
    @Test
    void propertiesTest() {
        // TODO: test properties
    }

}
