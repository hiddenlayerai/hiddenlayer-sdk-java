/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hiddenlayer.sdk.rest.models.MultiformatMessageString;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import com.hiddenlayer.sdk.rest.models.ReportingConfiguration;
import com.hiddenlayer.sdk.rest.models.ReportingDescriptorRelationship;
import java.net.URI;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Metadata that describes a specific report produced by the tool, as part of the analysis it provides or its runtime reporting.
 */
@JsonPropertyOrder({
  ReportingDescriptor.JSON_PROPERTY_ID,
  ReportingDescriptor.JSON_PROPERTY_DEPRECATED_IDS,
  ReportingDescriptor.JSON_PROPERTY_GUID,
  ReportingDescriptor.JSON_PROPERTY_DEPRECATED_GUIDS,
  ReportingDescriptor.JSON_PROPERTY_NAME,
  ReportingDescriptor.JSON_PROPERTY_DEPRECATED_NAMES,
  ReportingDescriptor.JSON_PROPERTY_SHORT_DESCRIPTION,
  ReportingDescriptor.JSON_PROPERTY_FULL_DESCRIPTION,
  ReportingDescriptor.JSON_PROPERTY_MESSAGE_STRINGS,
  ReportingDescriptor.JSON_PROPERTY_DEFAULT_CONFIGURATION,
  ReportingDescriptor.JSON_PROPERTY_HELP_URI,
  ReportingDescriptor.JSON_PROPERTY_HELP,
  ReportingDescriptor.JSON_PROPERTY_RELATIONSHIPS,
  ReportingDescriptor.JSON_PROPERTY_PROPERTIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-10T21:03:59.882437Z[GMT]", comments = "Generator version: 7.6.0")
public class ReportingDescriptor {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_DEPRECATED_IDS = "deprecatedIds";
  private Set<String> deprecatedIds = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_GUID = "guid";
  private String guid;

  public static final String JSON_PROPERTY_DEPRECATED_GUIDS = "deprecatedGuids";
  private Set<String> deprecatedGuids = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DEPRECATED_NAMES = "deprecatedNames";
  private Set<String> deprecatedNames = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SHORT_DESCRIPTION = "shortDescription";
  private MultiformatMessageString shortDescription;

  public static final String JSON_PROPERTY_FULL_DESCRIPTION = "fullDescription";
  private MultiformatMessageString fullDescription;

  public static final String JSON_PROPERTY_MESSAGE_STRINGS = "messageStrings";
  private Map<String, MultiformatMessageString> messageStrings = new HashMap<>();

  public static final String JSON_PROPERTY_DEFAULT_CONFIGURATION = "defaultConfiguration";
  private ReportingConfiguration defaultConfiguration;

  public static final String JSON_PROPERTY_HELP_URI = "helpUri";
  private URI helpUri;

  public static final String JSON_PROPERTY_HELP = "help";
  private MultiformatMessageString help;

  public static final String JSON_PROPERTY_RELATIONSHIPS = "relationships";
  private Set<ReportingDescriptorRelationship> relationships = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private PropertyBag properties;

  public ReportingDescriptor() { 
  }

  public ReportingDescriptor id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A stable, opaque identifier for the report.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ReportingDescriptor deprecatedIds(Set<String> deprecatedIds) {
    this.deprecatedIds = deprecatedIds;
    return this;
  }

  public ReportingDescriptor addDeprecatedIdsItem(String deprecatedIdsItem) {
    if (this.deprecatedIds == null) {
      this.deprecatedIds = new LinkedHashSet<>();
    }
    this.deprecatedIds.add(deprecatedIdsItem);
    return this;
  }

   /**
   * An array of stable, opaque identifiers by which this report was known in some previous version of the analysis tool.
   * @return deprecatedIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPRECATED_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getDeprecatedIds() {
    return deprecatedIds;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_DEPRECATED_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecatedIds(Set<String> deprecatedIds) {
    this.deprecatedIds = deprecatedIds;
  }


  public ReportingDescriptor guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * A unique identifier for the reporting descriptor in the form of a GUID.
   * @return guid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGuid() {
    return guid;
  }


  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(String guid) {
    this.guid = guid;
  }


  public ReportingDescriptor deprecatedGuids(Set<String> deprecatedGuids) {
    this.deprecatedGuids = deprecatedGuids;
    return this;
  }

  public ReportingDescriptor addDeprecatedGuidsItem(String deprecatedGuidsItem) {
    if (this.deprecatedGuids == null) {
      this.deprecatedGuids = new LinkedHashSet<>();
    }
    this.deprecatedGuids.add(deprecatedGuidsItem);
    return this;
  }

   /**
   * An array of unique identifies in the form of a GUID by which this report was known in some previous version of the analysis tool.
   * @return deprecatedGuids
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPRECATED_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getDeprecatedGuids() {
    return deprecatedGuids;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_DEPRECATED_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecatedGuids(Set<String> deprecatedGuids) {
    this.deprecatedGuids = deprecatedGuids;
  }


  public ReportingDescriptor name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A report identifier that is understandable to an end user.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ReportingDescriptor deprecatedNames(Set<String> deprecatedNames) {
    this.deprecatedNames = deprecatedNames;
    return this;
  }

  public ReportingDescriptor addDeprecatedNamesItem(String deprecatedNamesItem) {
    if (this.deprecatedNames == null) {
      this.deprecatedNames = new LinkedHashSet<>();
    }
    this.deprecatedNames.add(deprecatedNamesItem);
    return this;
  }

   /**
   * An array of readable identifiers by which this report was known in some previous version of the analysis tool.
   * @return deprecatedNames
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPRECATED_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getDeprecatedNames() {
    return deprecatedNames;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_DEPRECATED_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecatedNames(Set<String> deprecatedNames) {
    this.deprecatedNames = deprecatedNames;
  }


  public ReportingDescriptor shortDescription(MultiformatMessageString shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Get shortDescription
   * @return shortDescription
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MultiformatMessageString getShortDescription() {
    return shortDescription;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortDescription(MultiformatMessageString shortDescription) {
    this.shortDescription = shortDescription;
  }


  public ReportingDescriptor fullDescription(MultiformatMessageString fullDescription) {
    this.fullDescription = fullDescription;
    return this;
  }

   /**
   * Get fullDescription
   * @return fullDescription
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MultiformatMessageString getFullDescription() {
    return fullDescription;
  }


  @JsonProperty(JSON_PROPERTY_FULL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullDescription(MultiformatMessageString fullDescription) {
    this.fullDescription = fullDescription;
  }


  public ReportingDescriptor messageStrings(Map<String, MultiformatMessageString> messageStrings) {
    this.messageStrings = messageStrings;
    return this;
  }

  public ReportingDescriptor putMessageStringsItem(String key, MultiformatMessageString messageStringsItem) {
    if (this.messageStrings == null) {
      this.messageStrings = new HashMap<>();
    }
    this.messageStrings.put(key, messageStringsItem);
    return this;
  }

   /**
   * A set of name/value pairs with arbitrary names. Each value is a multiformatMessageString object, which holds message strings in plain text and (optionally) Markdown format. The strings can include placeholders, which can be used to construct a message in combination with an arbitrary number of additional string arguments.
   * @return messageStrings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, MultiformatMessageString> getMessageStrings() {
    return messageStrings;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageStrings(Map<String, MultiformatMessageString> messageStrings) {
    this.messageStrings = messageStrings;
  }


  public ReportingDescriptor defaultConfiguration(ReportingConfiguration defaultConfiguration) {
    this.defaultConfiguration = defaultConfiguration;
    return this;
  }

   /**
   * Get defaultConfiguration
   * @return defaultConfiguration
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReportingConfiguration getDefaultConfiguration() {
    return defaultConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultConfiguration(ReportingConfiguration defaultConfiguration) {
    this.defaultConfiguration = defaultConfiguration;
  }


  public ReportingDescriptor helpUri(URI helpUri) {
    this.helpUri = helpUri;
    return this;
  }

   /**
   * A URI where the primary documentation for the report can be found.
   * @return helpUri
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELP_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHelpUri() {
    return helpUri;
  }


  @JsonProperty(JSON_PROPERTY_HELP_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelpUri(URI helpUri) {
    this.helpUri = helpUri;
  }


  public ReportingDescriptor help(MultiformatMessageString help) {
    this.help = help;
    return this;
  }

   /**
   * Get help
   * @return help
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MultiformatMessageString getHelp() {
    return help;
  }


  @JsonProperty(JSON_PROPERTY_HELP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelp(MultiformatMessageString help) {
    this.help = help;
  }


  public ReportingDescriptor relationships(Set<ReportingDescriptorRelationship> relationships) {
    this.relationships = relationships;
    return this;
  }

  public ReportingDescriptor addRelationshipsItem(ReportingDescriptorRelationship relationshipsItem) {
    if (this.relationships == null) {
      this.relationships = new LinkedHashSet<>();
    }
    this.relationships.add(relationshipsItem);
    return this;
  }

   /**
   * An array of objects that describe relationships between this reporting descriptor and others.
   * @return relationships
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<ReportingDescriptorRelationship> getRelationships() {
    return relationships;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationships(Set<ReportingDescriptorRelationship> relationships) {
    this.relationships = relationships;
  }


  public ReportingDescriptor properties(PropertyBag properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyBag getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(PropertyBag properties) {
    this.properties = properties;
  }


  /**
   * Return true if this reportingDescriptor object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportingDescriptor reportingDescriptor = (ReportingDescriptor) o;
    return Objects.equals(this.id, reportingDescriptor.id) &&
        Objects.equals(this.deprecatedIds, reportingDescriptor.deprecatedIds) &&
        Objects.equals(this.guid, reportingDescriptor.guid) &&
        Objects.equals(this.deprecatedGuids, reportingDescriptor.deprecatedGuids) &&
        Objects.equals(this.name, reportingDescriptor.name) &&
        Objects.equals(this.deprecatedNames, reportingDescriptor.deprecatedNames) &&
        Objects.equals(this.shortDescription, reportingDescriptor.shortDescription) &&
        Objects.equals(this.fullDescription, reportingDescriptor.fullDescription) &&
        Objects.equals(this.messageStrings, reportingDescriptor.messageStrings) &&
        Objects.equals(this.defaultConfiguration, reportingDescriptor.defaultConfiguration) &&
        Objects.equals(this.helpUri, reportingDescriptor.helpUri) &&
        Objects.equals(this.help, reportingDescriptor.help) &&
        Objects.equals(this.relationships, reportingDescriptor.relationships) &&
        Objects.equals(this.properties, reportingDescriptor.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, deprecatedIds, guid, deprecatedGuids, name, deprecatedNames, shortDescription, fullDescription, messageStrings, defaultConfiguration, helpUri, help, relationships, properties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportingDescriptor {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    deprecatedIds: ").append(toIndentedString(deprecatedIds)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    deprecatedGuids: ").append(toIndentedString(deprecatedGuids)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    deprecatedNames: ").append(toIndentedString(deprecatedNames)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    fullDescription: ").append(toIndentedString(fullDescription)).append("\n");
    sb.append("    messageStrings: ").append(toIndentedString(messageStrings)).append("\n");
    sb.append("    defaultConfiguration: ").append(toIndentedString(defaultConfiguration)).append("\n");
    sb.append("    helpUri: ").append(toIndentedString(helpUri)).append("\n");
    sb.append("    help: ").append(toIndentedString(help)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `deprecatedIds` to the URL query string
    if (getDeprecatedIds() != null) {
      int i = 0;
      for (String _item : getDeprecatedIds()) {
        joiner.add(String.format("%sdeprecatedIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(_item), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
      i++;
    }

    // add `guid` to the URL query string
    if (getGuid() != null) {
      joiner.add(String.format("%sguid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGuid()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `deprecatedGuids` to the URL query string
    if (getDeprecatedGuids() != null) {
      int i = 0;
      for (String _item : getDeprecatedGuids()) {
        joiner.add(String.format("%sdeprecatedGuids%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(_item), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
      i++;
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `deprecatedNames` to the URL query string
    if (getDeprecatedNames() != null) {
      int i = 0;
      for (String _item : getDeprecatedNames()) {
        joiner.add(String.format("%sdeprecatedNames%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(_item), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
      i++;
    }

    // add `shortDescription` to the URL query string
    if (getShortDescription() != null) {
      joiner.add(getShortDescription().toUrlQueryString(prefix + "shortDescription" + suffix));
    }

    // add `fullDescription` to the URL query string
    if (getFullDescription() != null) {
      joiner.add(getFullDescription().toUrlQueryString(prefix + "fullDescription" + suffix));
    }

    // add `messageStrings` to the URL query string
    if (getMessageStrings() != null) {
      for (String _key : getMessageStrings().keySet()) {
        if (getMessageStrings().get(_key) != null) {
          joiner.add(getMessageStrings().get(_key).toUrlQueryString(String.format("%smessageStrings%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix))));
        }
      }
    }

    // add `defaultConfiguration` to the URL query string
    if (getDefaultConfiguration() != null) {
      joiner.add(getDefaultConfiguration().toUrlQueryString(prefix + "defaultConfiguration" + suffix));
    }

    // add `helpUri` to the URL query string
    if (getHelpUri() != null) {
      joiner.add(String.format("%shelpUri%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHelpUri()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `help` to the URL query string
    if (getHelp() != null) {
      joiner.add(getHelp().toUrlQueryString(prefix + "help" + suffix));
    }

    // add `relationships` to the URL query string
    if (getRelationships() != null) {
      int i = 0;
      for (ReportingDescriptorRelationship _item : getRelationships()) {
        if (_item != null) {
          joiner.add(_item.toUrlQueryString(String.format("%srelationships%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
      i++;
    }

    // add `properties` to the URL query string
    if (getProperties() != null) {
      joiner.add(String.format("%sproperties%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProperties()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

