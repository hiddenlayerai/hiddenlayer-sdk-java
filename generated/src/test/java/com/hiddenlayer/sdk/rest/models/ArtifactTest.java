/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hiddenlayer.sdk.rest.models.ArtifactContent;
import com.hiddenlayer.sdk.rest.models.ArtifactLocation;
import com.hiddenlayer.sdk.rest.models.Message;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Artifact
 */
class ArtifactTest {
    private final Artifact model = new Artifact();

    /**
     * Model tests for Artifact
     */
    @Test
    void testArtifact() {
        // TODO: test Artifact
    }

    /**
     * Test the property 'description'
     */
    @Test
    void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'location'
     */
    @Test
    void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'parentIndex'
     */
    @Test
    void parentIndexTest() {
        // TODO: test parentIndex
    }

    /**
     * Test the property 'offset'
     */
    @Test
    void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'length'
     */
    @Test
    void lengthTest() {
        // TODO: test length
    }

    /**
     * Test the property 'roles'
     */
    @Test
    void rolesTest() {
        // TODO: test roles
    }

    /**
     * Test the property 'mimeType'
     */
    @Test
    void mimeTypeTest() {
        // TODO: test mimeType
    }

    /**
     * Test the property 'contents'
     */
    @Test
    void contentsTest() {
        // TODO: test contents
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'sourceLanguage'
     */
    @Test
    void sourceLanguageTest() {
        // TODO: test sourceLanguage
    }

    /**
     * Test the property 'hashes'
     */
    @Test
    void hashesTest() {
        // TODO: test hashes
    }

    /**
     * Test the property 'lastModifiedTimeUtc'
     */
    @Test
    void lastModifiedTimeUtcTest() {
        // TODO: test lastModifiedTimeUtc
    }

    /**
     * Test the property 'properties'
     */
    @Test
    void propertiesTest() {
        // TODO: test properties
    }

}
