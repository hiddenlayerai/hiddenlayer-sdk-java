/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hiddenlayer.sdk.rest.models.ArtifactLocation;
import com.hiddenlayer.sdk.rest.models.ConfigurationOverride;
import com.hiddenlayer.sdk.rest.models.Notification;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Invocation
 */
class InvocationTest {
    private final Invocation model = new Invocation();

    /**
     * Model tests for Invocation
     */
    @Test
    void testInvocation() {
        // TODO: test Invocation
    }

    /**
     * Test the property 'commandLine'
     */
    @Test
    void commandLineTest() {
        // TODO: test commandLine
    }

    /**
     * Test the property 'arguments'
     */
    @Test
    void argumentsTest() {
        // TODO: test arguments
    }

    /**
     * Test the property 'responseFiles'
     */
    @Test
    void responseFilesTest() {
        // TODO: test responseFiles
    }

    /**
     * Test the property 'startTimeUtc'
     */
    @Test
    void startTimeUtcTest() {
        // TODO: test startTimeUtc
    }

    /**
     * Test the property 'endTimeUtc'
     */
    @Test
    void endTimeUtcTest() {
        // TODO: test endTimeUtc
    }

    /**
     * Test the property 'exitCode'
     */
    @Test
    void exitCodeTest() {
        // TODO: test exitCode
    }

    /**
     * Test the property 'ruleConfigurationOverrides'
     */
    @Test
    void ruleConfigurationOverridesTest() {
        // TODO: test ruleConfigurationOverrides
    }

    /**
     * Test the property 'notificationConfigurationOverrides'
     */
    @Test
    void notificationConfigurationOverridesTest() {
        // TODO: test notificationConfigurationOverrides
    }

    /**
     * Test the property 'toolExecutionNotifications'
     */
    @Test
    void toolExecutionNotificationsTest() {
        // TODO: test toolExecutionNotifications
    }

    /**
     * Test the property 'toolConfigurationNotifications'
     */
    @Test
    void toolConfigurationNotificationsTest() {
        // TODO: test toolConfigurationNotifications
    }

    /**
     * Test the property 'exitCodeDescription'
     */
    @Test
    void exitCodeDescriptionTest() {
        // TODO: test exitCodeDescription
    }

    /**
     * Test the property 'exitSignalName'
     */
    @Test
    void exitSignalNameTest() {
        // TODO: test exitSignalName
    }

    /**
     * Test the property 'exitSignalNumber'
     */
    @Test
    void exitSignalNumberTest() {
        // TODO: test exitSignalNumber
    }

    /**
     * Test the property 'processStartFailureMessage'
     */
    @Test
    void processStartFailureMessageTest() {
        // TODO: test processStartFailureMessage
    }

    /**
     * Test the property 'executionSuccessful'
     */
    @Test
    void executionSuccessfulTest() {
        // TODO: test executionSuccessful
    }

    /**
     * Test the property 'machine'
     */
    @Test
    void machineTest() {
        // TODO: test machine
    }

    /**
     * Test the property 'account'
     */
    @Test
    void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'processId'
     */
    @Test
    void processIdTest() {
        // TODO: test processId
    }

    /**
     * Test the property 'executableLocation'
     */
    @Test
    void executableLocationTest() {
        // TODO: test executableLocation
    }

    /**
     * Test the property 'workingDirectory'
     */
    @Test
    void workingDirectoryTest() {
        // TODO: test workingDirectory
    }

    /**
     * Test the property 'environmentVariables'
     */
    @Test
    void environmentVariablesTest() {
        // TODO: test environmentVariables
    }

    /**
     * Test the property 'stdin'
     */
    @Test
    void stdinTest() {
        // TODO: test stdin
    }

    /**
     * Test the property 'stdout'
     */
    @Test
    void stdoutTest() {
        // TODO: test stdout
    }

    /**
     * Test the property 'stderr'
     */
    @Test
    void stderrTest() {
        // TODO: test stderr
    }

    /**
     * Test the property 'stdoutStderr'
     */
    @Test
    void stdoutStderrTest() {
        // TODO: test stdoutStderr
    }

    /**
     * Test the property 'properties'
     */
    @Test
    void propertiesTest() {
        // TODO: test properties
    }

}
