/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hiddenlayer.sdk.rest.models.ArtifactContent;
import com.hiddenlayer.sdk.rest.models.Message;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A region within an artifact where a result was detected.
 */
@JsonPropertyOrder({
  Region.JSON_PROPERTY_START_LINE,
  Region.JSON_PROPERTY_START_COLUMN,
  Region.JSON_PROPERTY_END_LINE,
  Region.JSON_PROPERTY_END_COLUMN,
  Region.JSON_PROPERTY_CHAR_OFFSET,
  Region.JSON_PROPERTY_CHAR_LENGTH,
  Region.JSON_PROPERTY_BYTE_OFFSET,
  Region.JSON_PROPERTY_BYTE_LENGTH,
  Region.JSON_PROPERTY_SNIPPET,
  Region.JSON_PROPERTY_MESSAGE,
  Region.JSON_PROPERTY_SOURCE_LANGUAGE,
  Region.JSON_PROPERTY_PROPERTIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-02T17:04:04.425318Z[GMT]", comments = "Generator version: 7.6.0")
public class Region {
  public static final String JSON_PROPERTY_START_LINE = "startLine";
  private Integer startLine;

  public static final String JSON_PROPERTY_START_COLUMN = "startColumn";
  private Integer startColumn;

  public static final String JSON_PROPERTY_END_LINE = "endLine";
  private Integer endLine;

  public static final String JSON_PROPERTY_END_COLUMN = "endColumn";
  private Integer endColumn;

  public static final String JSON_PROPERTY_CHAR_OFFSET = "charOffset";
  private Integer charOffset = -1;

  public static final String JSON_PROPERTY_CHAR_LENGTH = "charLength";
  private Integer charLength;

  public static final String JSON_PROPERTY_BYTE_OFFSET = "byteOffset";
  private Integer byteOffset = -1;

  public static final String JSON_PROPERTY_BYTE_LENGTH = "byteLength";
  private Integer byteLength;

  public static final String JSON_PROPERTY_SNIPPET = "snippet";
  private ArtifactContent snippet;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<Message> message = JsonNullable.<Message>undefined();

  public static final String JSON_PROPERTY_SOURCE_LANGUAGE = "sourceLanguage";
  private String sourceLanguage;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private PropertyBag properties;

  public Region() { 
  }

  public Region startLine(Integer startLine) {
    this.startLine = startLine;
    return this;
  }

   /**
   * The line number of the first character in the region.
   * minimum: 1
   * @return startLine
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStartLine() {
    return startLine;
  }


  @JsonProperty(JSON_PROPERTY_START_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartLine(Integer startLine) {
    this.startLine = startLine;
  }


  public Region startColumn(Integer startColumn) {
    this.startColumn = startColumn;
    return this;
  }

   /**
   * The column number of the first character in the region.
   * minimum: 1
   * @return startColumn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStartColumn() {
    return startColumn;
  }


  @JsonProperty(JSON_PROPERTY_START_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartColumn(Integer startColumn) {
    this.startColumn = startColumn;
  }


  public Region endLine(Integer endLine) {
    this.endLine = endLine;
    return this;
  }

   /**
   * The line number of the last character in the region.
   * minimum: 1
   * @return endLine
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEndLine() {
    return endLine;
  }


  @JsonProperty(JSON_PROPERTY_END_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndLine(Integer endLine) {
    this.endLine = endLine;
  }


  public Region endColumn(Integer endColumn) {
    this.endColumn = endColumn;
    return this;
  }

   /**
   * The column number of the character following the end of the region.
   * minimum: 1
   * @return endColumn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEndColumn() {
    return endColumn;
  }


  @JsonProperty(JSON_PROPERTY_END_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndColumn(Integer endColumn) {
    this.endColumn = endColumn;
  }


  public Region charOffset(Integer charOffset) {
    this.charOffset = charOffset;
    return this;
  }

   /**
   * The zero-based offset from the beginning of the artifact of the first character in the region.
   * minimum: -1
   * @return charOffset
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHAR_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCharOffset() {
    return charOffset;
  }


  @JsonProperty(JSON_PROPERTY_CHAR_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCharOffset(Integer charOffset) {
    this.charOffset = charOffset;
  }


  public Region charLength(Integer charLength) {
    this.charLength = charLength;
    return this;
  }

   /**
   * The length of the region in characters.
   * minimum: 0
   * @return charLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHAR_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCharLength() {
    return charLength;
  }


  @JsonProperty(JSON_PROPERTY_CHAR_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCharLength(Integer charLength) {
    this.charLength = charLength;
  }


  public Region byteOffset(Integer byteOffset) {
    this.byteOffset = byteOffset;
    return this;
  }

   /**
   * The zero-based offset from the beginning of the artifact of the first byte in the region.
   * minimum: -1
   * @return byteOffset
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTE_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getByteOffset() {
    return byteOffset;
  }


  @JsonProperty(JSON_PROPERTY_BYTE_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setByteOffset(Integer byteOffset) {
    this.byteOffset = byteOffset;
  }


  public Region byteLength(Integer byteLength) {
    this.byteLength = byteLength;
    return this;
  }

   /**
   * The length of the region in bytes.
   * minimum: 0
   * @return byteLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getByteLength() {
    return byteLength;
  }


  @JsonProperty(JSON_PROPERTY_BYTE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setByteLength(Integer byteLength) {
    this.byteLength = byteLength;
  }


  public Region snippet(ArtifactContent snippet) {
    this.snippet = snippet;
    return this;
  }

   /**
   * Get snippet
   * @return snippet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SNIPPET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ArtifactContent getSnippet() {
    return snippet;
  }


  @JsonProperty(JSON_PROPERTY_SNIPPET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnippet(ArtifactContent snippet) {
    this.snippet = snippet;
  }


  public Region message(Message message) {
    this.message = JsonNullable.<Message>of(message);
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Message getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Message> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<Message> message) {
    this.message = message;
  }

  public void setMessage(Message message) {
    this.message = JsonNullable.<Message>of(message);
  }


  public Region sourceLanguage(String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
    return this;
  }

   /**
   * Specifies the source language, if any, of the portion of the artifact specified by the region object.
   * @return sourceLanguage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceLanguage() {
    return sourceLanguage;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceLanguage(String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
  }


  public Region properties(PropertyBag properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyBag getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(PropertyBag properties) {
    this.properties = properties;
  }


  /**
   * Return true if this region object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Region region = (Region) o;
    return Objects.equals(this.startLine, region.startLine) &&
        Objects.equals(this.startColumn, region.startColumn) &&
        Objects.equals(this.endLine, region.endLine) &&
        Objects.equals(this.endColumn, region.endColumn) &&
        Objects.equals(this.charOffset, region.charOffset) &&
        Objects.equals(this.charLength, region.charLength) &&
        Objects.equals(this.byteOffset, region.byteOffset) &&
        Objects.equals(this.byteLength, region.byteLength) &&
        Objects.equals(this.snippet, region.snippet) &&
        equalsNullable(this.message, region.message) &&
        Objects.equals(this.sourceLanguage, region.sourceLanguage) &&
        Objects.equals(this.properties, region.properties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(startLine, startColumn, endLine, endColumn, charOffset, charLength, byteOffset, byteLength, snippet, hashCodeNullable(message), sourceLanguage, properties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Region {\n");
    sb.append("    startLine: ").append(toIndentedString(startLine)).append("\n");
    sb.append("    startColumn: ").append(toIndentedString(startColumn)).append("\n");
    sb.append("    endLine: ").append(toIndentedString(endLine)).append("\n");
    sb.append("    endColumn: ").append(toIndentedString(endColumn)).append("\n");
    sb.append("    charOffset: ").append(toIndentedString(charOffset)).append("\n");
    sb.append("    charLength: ").append(toIndentedString(charLength)).append("\n");
    sb.append("    byteOffset: ").append(toIndentedString(byteOffset)).append("\n");
    sb.append("    byteLength: ").append(toIndentedString(byteLength)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    sourceLanguage: ").append(toIndentedString(sourceLanguage)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `startLine` to the URL query string
    if (getStartLine() != null) {
      joiner.add(String.format("%sstartLine%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStartLine()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `startColumn` to the URL query string
    if (getStartColumn() != null) {
      joiner.add(String.format("%sstartColumn%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStartColumn()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `endLine` to the URL query string
    if (getEndLine() != null) {
      joiner.add(String.format("%sendLine%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEndLine()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `endColumn` to the URL query string
    if (getEndColumn() != null) {
      joiner.add(String.format("%sendColumn%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEndColumn()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `charOffset` to the URL query string
    if (getCharOffset() != null) {
      joiner.add(String.format("%scharOffset%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCharOffset()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `charLength` to the URL query string
    if (getCharLength() != null) {
      joiner.add(String.format("%scharLength%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCharLength()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `byteOffset` to the URL query string
    if (getByteOffset() != null) {
      joiner.add(String.format("%sbyteOffset%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getByteOffset()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `byteLength` to the URL query string
    if (getByteLength() != null) {
      joiner.add(String.format("%sbyteLength%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getByteLength()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `snippet` to the URL query string
    if (getSnippet() != null) {
      joiner.add(getSnippet().toUrlQueryString(prefix + "snippet" + suffix));
    }

    // add `message` to the URL query string
    if (getMessage() != null) {
      joiner.add(getMessage().toUrlQueryString(prefix + "message" + suffix));
    }

    // add `sourceLanguage` to the URL query string
    if (getSourceLanguage() != null) {
      joiner.add(String.format("%ssourceLanguage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSourceLanguage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `properties` to the URL query string
    if (getProperties() != null) {
      joiner.add(String.format("%sproperties%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProperties()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

