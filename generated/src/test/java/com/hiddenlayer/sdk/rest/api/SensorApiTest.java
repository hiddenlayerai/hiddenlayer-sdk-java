/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.api;

import com.hiddenlayer.sdk.rest.ApiException;
import com.hiddenlayer.sdk.rest.models.CreateSensorRequest;
import com.hiddenlayer.sdk.rest.models.Sensor;
import com.hiddenlayer.sdk.rest.models.SensorQueryResponse;
import com.hiddenlayer.sdk.rest.models.SensorSORModelCardQueryResponse;
import com.hiddenlayer.sdk.rest.models.SensorSORQueryRequest;
import java.util.UUID;
import com.hiddenlayer.sdk.rest.models.ValidationErrorModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for SensorApi
 */
@Disabled
public class SensorApiTest {

    private final SensorApi api = new SensorApi();

    
    /**
     * Create a Sensor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSensorTest() throws ApiException {
        CreateSensorRequest createSensorRequest = null;
        Sensor response = 
        api.createSensor(createSensorRequest);
        
        // TODO: test validations
    }
    
    /**
     * Delete Sensor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSensorTest() throws ApiException {
        UUID sensorId = null;
        
        api.deleteSensor(sensorId);
        
        // TODO: test validations
    }
    
    /**
     * Get Sensor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSensorTest() throws ApiException {
        UUID sensorId = null;
        Sensor response = 
        api.getSensor(sensorId);
        
        // TODO: test validations
    }
    
    /**
     * Query a Sensor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void querySensorTest() throws ApiException {
        SensorSORQueryRequest sensorSORQueryRequest = null;
        SensorQueryResponse response = 
        api.querySensor(sensorSORQueryRequest);
        
        // TODO: test validations
    }
    
    /**
     * List Model Cards
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sensorSorApiV3ModelCardsQueryGetTest() throws ApiException {
        String modelNameEq = null;
        String modelNameContains = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        SensorSORModelCardQueryResponse response = 
        api.sensorSorApiV3ModelCardsQueryGet(modelNameEq, modelNameContains, limit, offset, sort);
        
        // TODO: test validations
    }
    
}
