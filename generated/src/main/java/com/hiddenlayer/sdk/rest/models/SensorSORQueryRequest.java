/*
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hiddenlayer.sdk.rest.models.SensorSORQueryFilter;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SensorSORQueryRequest
 */
@JsonPropertyOrder({
  SensorSORQueryRequest.JSON_PROPERTY_FILTER,
  SensorSORQueryRequest.JSON_PROPERTY_ORDER_BY,
  SensorSORQueryRequest.JSON_PROPERTY_ORDER_DIR,
  SensorSORQueryRequest.JSON_PROPERTY_PAGE_SIZE,
  SensorSORQueryRequest.JSON_PROPERTY_PAGE_NUMBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-19T23:42:19.631048Z[GMT]", comments = "Generator version: 7.6.0")
public class SensorSORQueryRequest {
  public static final String JSON_PROPERTY_FILTER = "filter";
  private SensorSORQueryFilter filter;

  public static final String JSON_PROPERTY_ORDER_BY = "order_by";
  private String orderBy = "created_at";

  /**
   * Gets or Sets orderDir
   */
  public enum OrderDirEnum {
    ASC("asc"),
    
    DESC("desc"),
    
    ASC2("ASC"),
    
    DESC2("DESC");

    private String value;

    OrderDirEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderDirEnum fromValue(String value) {
      for (OrderDirEnum b : OrderDirEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORDER_DIR = "order_dir";
  private OrderDirEnum orderDir;

  public static final String JSON_PROPERTY_PAGE_SIZE = "page_size";
  private Integer pageSize = 25;

  public static final String JSON_PROPERTY_PAGE_NUMBER = "page_number";
  private Integer pageNumber = 0;

  public SensorSORQueryRequest() { 
  }

  public SensorSORQueryRequest filter(SensorSORQueryFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SensorSORQueryFilter getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(SensorSORQueryFilter filter) {
    this.filter = filter;
  }


  public SensorSORQueryRequest orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

   /**
   * Get orderBy
   * @return orderBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrderBy() {
    return orderBy;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }


  public SensorSORQueryRequest orderDir(OrderDirEnum orderDir) {
    this.orderDir = orderDir;
    return this;
  }

   /**
   * Get orderDir
   * @return orderDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderDirEnum getOrderDir() {
    return orderDir;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderDir(OrderDirEnum orderDir) {
    this.orderDir = orderDir;
  }


  public SensorSORQueryRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageSize() {
    return pageSize;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public SensorSORQueryRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageNumber() {
    return pageNumber;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  /**
   * Return true if this SensorSORQueryRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SensorSORQueryRequest sensorSORQueryRequest = (SensorSORQueryRequest) o;
    return Objects.equals(this.filter, sensorSORQueryRequest.filter) &&
        Objects.equals(this.orderBy, sensorSORQueryRequest.orderBy) &&
        Objects.equals(this.orderDir, sensorSORQueryRequest.orderDir) &&
        Objects.equals(this.pageSize, sensorSORQueryRequest.pageSize) &&
        Objects.equals(this.pageNumber, sensorSORQueryRequest.pageNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, orderBy, orderDir, pageSize, pageNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensorSORQueryRequest {\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    orderDir: ").append(toIndentedString(orderDir)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(getFilter().toUrlQueryString(prefix + "filter" + suffix));
    }

    // add `order_by` to the URL query string
    if (getOrderBy() != null) {
      joiner.add(String.format("%sorder_by%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOrderBy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `order_dir` to the URL query string
    if (getOrderDir() != null) {
      joiner.add(String.format("%sorder_dir%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOrderDir()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `page_size` to the URL query string
    if (getPageSize() != null) {
      joiner.add(String.format("%spage_size%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPageSize()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `page_number` to the URL query string
    if (getPageNumber() != null) {
      joiner.add(String.format("%spage_number%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPageNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

