/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hiddenlayer.sdk.rest.models.Location;
import com.hiddenlayer.sdk.rest.models.Message;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import com.hiddenlayer.sdk.rest.models.ReportingDescriptorReference;
import com.hiddenlayer.sdk.rest.models.SarifException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Describes a condition relevant to the tool itself, as opposed to being relevant to a target being analyzed by the tool.
 */
@JsonPropertyOrder({
  Notification.JSON_PROPERTY_LOCATIONS,
  Notification.JSON_PROPERTY_MESSAGE,
  Notification.JSON_PROPERTY_LEVEL,
  Notification.JSON_PROPERTY_THREAD_ID,
  Notification.JSON_PROPERTY_TIME_UTC,
  Notification.JSON_PROPERTY_EXCEPTION,
  Notification.JSON_PROPERTY_DESCRIPTOR,
  Notification.JSON_PROPERTY_ASSOCIATED_RULE,
  Notification.JSON_PROPERTY_PROPERTIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-10T21:03:59.882437Z[GMT]", comments = "Generator version: 7.6.0")
public class Notification {
  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private Set<Location> locations = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private Message message;

  /**
   * A value specifying the severity level of the notification.
   */
  public enum LevelEnum {
    NONE("none"),
    
    NOTE("note"),
    
    WARNING("warning"),
    
    ERROR("error");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LevelEnum fromValue(String value) {
      for (LevelEnum b : LevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEVEL = "level";
  private LevelEnum level = LevelEnum.WARNING;

  public static final String JSON_PROPERTY_THREAD_ID = "threadId";
  private Integer threadId;

  public static final String JSON_PROPERTY_TIME_UTC = "timeUtc";
  private OffsetDateTime timeUtc;

  public static final String JSON_PROPERTY_EXCEPTION = "exception";
  private SarifException exception;

  public static final String JSON_PROPERTY_DESCRIPTOR = "descriptor";
  private JsonNullable<ReportingDescriptorReference> descriptor = JsonNullable.<ReportingDescriptorReference>undefined();

  public static final String JSON_PROPERTY_ASSOCIATED_RULE = "associatedRule";
  private JsonNullable<ReportingDescriptorReference> associatedRule = JsonNullable.<ReportingDescriptorReference>undefined();

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private PropertyBag properties;

  public Notification() { 
  }

  public Notification locations(Set<Location> locations) {
    this.locations = locations;
    return this;
  }

  public Notification addLocationsItem(Location locationsItem) {
    if (this.locations == null) {
      this.locations = new LinkedHashSet<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * The locations relevant to this notification.
   * @return locations
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Location> getLocations() {
    return locations;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocations(Set<Location> locations) {
    this.locations = locations;
  }


  public Notification message(Message message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Message getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(Message message) {
    this.message = message;
  }


  public Notification level(LevelEnum level) {
    this.level = level;
    return this;
  }

   /**
   * A value specifying the severity level of the notification.
   * @return level
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LevelEnum getLevel() {
    return level;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel(LevelEnum level) {
    this.level = level;
  }


  public Notification threadId(Integer threadId) {
    this.threadId = threadId;
    return this;
  }

   /**
   * The thread identifier of the code that generated the notification.
   * @return threadId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getThreadId() {
    return threadId;
  }


  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThreadId(Integer threadId) {
    this.threadId = threadId;
  }


  public Notification timeUtc(OffsetDateTime timeUtc) {
    this.timeUtc = timeUtc;
    return this;
  }

   /**
   * The Coordinated Universal Time (UTC) date and time at which the analysis tool generated the notification.
   * @return timeUtc
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_UTC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTimeUtc() {
    return timeUtc;
  }


  @JsonProperty(JSON_PROPERTY_TIME_UTC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeUtc(OffsetDateTime timeUtc) {
    this.timeUtc = timeUtc;
  }


  public Notification exception(SarifException exception) {
    this.exception = exception;
    return this;
  }

   /**
   * Get exception
   * @return exception
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCEPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SarifException getException() {
    return exception;
  }


  @JsonProperty(JSON_PROPERTY_EXCEPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setException(SarifException exception) {
    this.exception = exception;
  }


  public Notification descriptor(ReportingDescriptorReference descriptor) {
    this.descriptor = JsonNullable.<ReportingDescriptorReference>of(descriptor);
    return this;
  }

   /**
   * Get descriptor
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ReportingDescriptorReference getDescriptor() {
        return descriptor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ReportingDescriptorReference> getDescriptor_JsonNullable() {
    return descriptor;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTOR)
  public void setDescriptor_JsonNullable(JsonNullable<ReportingDescriptorReference> descriptor) {
    this.descriptor = descriptor;
  }

  public void setDescriptor(ReportingDescriptorReference descriptor) {
    this.descriptor = JsonNullable.<ReportingDescriptorReference>of(descriptor);
  }


  public Notification associatedRule(ReportingDescriptorReference associatedRule) {
    this.associatedRule = JsonNullable.<ReportingDescriptorReference>of(associatedRule);
    return this;
  }

   /**
   * Get associatedRule
   * @return associatedRule
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ReportingDescriptorReference getAssociatedRule() {
        return associatedRule.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASSOCIATED_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ReportingDescriptorReference> getAssociatedRule_JsonNullable() {
    return associatedRule;
  }
  
  @JsonProperty(JSON_PROPERTY_ASSOCIATED_RULE)
  public void setAssociatedRule_JsonNullable(JsonNullable<ReportingDescriptorReference> associatedRule) {
    this.associatedRule = associatedRule;
  }

  public void setAssociatedRule(ReportingDescriptorReference associatedRule) {
    this.associatedRule = JsonNullable.<ReportingDescriptorReference>of(associatedRule);
  }


  public Notification properties(PropertyBag properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyBag getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(PropertyBag properties) {
    this.properties = properties;
  }


  /**
   * Return true if this notification object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.locations, notification.locations) &&
        Objects.equals(this.message, notification.message) &&
        Objects.equals(this.level, notification.level) &&
        Objects.equals(this.threadId, notification.threadId) &&
        Objects.equals(this.timeUtc, notification.timeUtc) &&
        Objects.equals(this.exception, notification.exception) &&
        equalsNullable(this.descriptor, notification.descriptor) &&
        equalsNullable(this.associatedRule, notification.associatedRule) &&
        Objects.equals(this.properties, notification.properties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(locations, message, level, threadId, timeUtc, exception, hashCodeNullable(descriptor), hashCodeNullable(associatedRule), properties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    timeUtc: ").append(toIndentedString(timeUtc)).append("\n");
    sb.append("    exception: ").append(toIndentedString(exception)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    associatedRule: ").append(toIndentedString(associatedRule)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `locations` to the URL query string
    if (getLocations() != null) {
      int i = 0;
      for (Location _item : getLocations()) {
        if (_item != null) {
          joiner.add(_item.toUrlQueryString(String.format("%slocations%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
      i++;
    }

    // add `message` to the URL query string
    if (getMessage() != null) {
      joiner.add(getMessage().toUrlQueryString(prefix + "message" + suffix));
    }

    // add `level` to the URL query string
    if (getLevel() != null) {
      joiner.add(String.format("%slevel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLevel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `threadId` to the URL query string
    if (getThreadId() != null) {
      joiner.add(String.format("%sthreadId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getThreadId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timeUtc` to the URL query string
    if (getTimeUtc() != null) {
      joiner.add(String.format("%stimeUtc%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTimeUtc()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `exception` to the URL query string
    if (getException() != null) {
      joiner.add(getException().toUrlQueryString(prefix + "exception" + suffix));
    }

    // add `descriptor` to the URL query string
    if (getDescriptor() != null) {
      joiner.add(getDescriptor().toUrlQueryString(prefix + "descriptor" + suffix));
    }

    // add `associatedRule` to the URL query string
    if (getAssociatedRule() != null) {
      joiner.add(getAssociatedRule().toUrlQueryString(prefix + "associatedRule" + suffix));
    }

    // add `properties` to the URL query string
    if (getProperties() != null) {
      joiner.add(String.format("%sproperties%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProperties()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

