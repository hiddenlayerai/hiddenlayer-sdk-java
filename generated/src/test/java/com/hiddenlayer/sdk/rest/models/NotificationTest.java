/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hiddenlayer.sdk.rest.models.Location;
import com.hiddenlayer.sdk.rest.models.Message;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import com.hiddenlayer.sdk.rest.models.ReportingDescriptorReference;
import com.hiddenlayer.sdk.rest.models.SarifException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Notification
 */
class NotificationTest {
    private final Notification model = new Notification();

    /**
     * Model tests for Notification
     */
    @Test
    void testNotification() {
        // TODO: test Notification
    }

    /**
     * Test the property 'locations'
     */
    @Test
    void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'message'
     */
    @Test
    void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'level'
     */
    @Test
    void levelTest() {
        // TODO: test level
    }

    /**
     * Test the property 'threadId'
     */
    @Test
    void threadIdTest() {
        // TODO: test threadId
    }

    /**
     * Test the property 'timeUtc'
     */
    @Test
    void timeUtcTest() {
        // TODO: test timeUtc
    }

    /**
     * Test the property 'exception'
     */
    @Test
    void exceptionTest() {
        // TODO: test exception
    }

    /**
     * Test the property 'descriptor'
     */
    @Test
    void descriptorTest() {
        // TODO: test descriptor
    }

    /**
     * Test the property 'associatedRule'
     */
    @Test
    void associatedRuleTest() {
        // TODO: test associatedRule
    }

    /**
     * Test the property 'properties'
     */
    @Test
    void propertiesTest() {
        // TODO: test properties
    }

}
