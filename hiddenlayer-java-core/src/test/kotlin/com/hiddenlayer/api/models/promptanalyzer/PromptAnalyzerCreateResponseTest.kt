// File generated from our OpenAPI spec by Stainless.

package com.hiddenlayer.api.models.promptanalyzer

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.hiddenlayer.api.core.jsonMapper
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class PromptAnalyzerCreateResponseTest {

    @Test
    fun create() {
        val promptAnalyzerCreateResponse =
            PromptAnalyzerCreateResponse.builder()
                .categories(
                    PromptAnalyzerCreateResponse.Categories.builder()
                        .guardrail(true)
                        .inputCode(true)
                        .inputDos(true)
                        .inputLanguage(true)
                        .inputPii(true)
                        .outputCode(true)
                        .outputPii(true)
                        .promptInjection(true)
                        .unsafeInput(true)
                        .unsafeOutput(true)
                        .build()
                )
                .elapsedMs(0.0)
                .frameworks(
                    PromptAnalyzerCreateResponse.Frameworks.builder()
                        .addMitre(
                            PromptAnalyzerCreateResponse.Frameworks.Mitre.builder()
                                .label("AML.T0051")
                                .name("LLM Prompt Injection")
                                .build()
                        )
                        .addOwasp(
                            PromptAnalyzerCreateResponse.Frameworks.Owasp.builder()
                                .label("LLM01")
                                .name("Prompt Injection")
                                .build()
                        )
                        .addOwasp2025(
                            PromptAnalyzerCreateResponse.Frameworks.Owasp2025.builder()
                                .label("LLM01:2025")
                                .name("Prompt Injection")
                                .build()
                        )
                        .build()
                )
                .model("model")
                .policy(
                    PromptAnalyzerCreateResponse.Policy.builder()
                        .blockGuardrailDetection(true)
                        .blockInputCodeDetection(true)
                        .blockInputDosDetection(true)
                        .blockInputPii(true)
                        .blockOutputCodeDetection(true)
                        .blockOutputPii(true)
                        .blockPromptInjection(true)
                        .blockUnsafe(true)
                        .blockUnsafeInput(true)
                        .blockUnsafeOutput(true)
                        .entityType(PromptAnalyzerCreateResponse.Policy.EntityType.STRICT)
                        .inputDosDetectionThreshold(4096.0)
                        .promptInjectionScanType(
                            PromptAnalyzerCreateResponse.Policy.PromptInjectionScanType.QUICK
                        )
                        .redactInputPii(true)
                        .redactOutputPii(true)
                        .redactType(PromptAnalyzerCreateResponse.Policy.RedactType.ENTITY)
                        .skipGuardrailDetection(true)
                        .skipInputCodeDetection(true)
                        .skipInputDosDetection(true)
                        .skipInputPiiDetection(true)
                        .skipInputUrlDetection(true)
                        .skipOutputCodeDetection(true)
                        .skipOutputPiiDetection(true)
                        .skipOutputUrlDetection(true)
                        .skipPromptInjectionDetection(true)
                        .build()
                )
                .provider("provider")
                .response(
                    PromptAnalyzerCreateResponse.Response.builder()
                        .model("model")
                        .output("output")
                        .prompt("prompt")
                        .provider("provider")
                        .unmodifiedOutput("unmodified_output")
                        .unmodifiedPrompt("unmodified_prompt")
                        .build()
                )
                .results(
                    PromptAnalyzerCreateResponse.Results.builder()
                        .guardrailResults(
                            PromptAnalyzerCreateResponse.Results.GuardrailResults.builder()
                                .elapsedMs(0.0)
                                .refusalClassifierResults(
                                    PromptAnalyzerCreateResponse.Results.GuardrailResults
                                        .RefusalClassifierResults
                                        .builder()
                                        .elapsedMs(0.0)
                                        .addProbability(0.0)
                                        .verdict(true)
                                        .version(0.0)
                                        .build()
                                )
                                .verdict(true)
                                .build()
                        )
                        .inputBlockListResults(
                            PromptAnalyzerCreateResponse.Results.InputBlockListResults.builder()
                                .elapsedMs(10.0)
                                .addMatch("badToken")
                                .verdict(true)
                                .build()
                        )
                        .inputCodeResults(
                            PromptAnalyzerCreateResponse.Results.InputCodeResults.builder()
                                .elapsedMs(0.0)
                                .verdict(true)
                                .build()
                        )
                        .inputDosResults(
                            PromptAnalyzerCreateResponse.Results.InputDosResults.builder()
                                .elapsedMs(0.0)
                                .embeddingsLength(0.0)
                                .verdict(true)
                                .build()
                        )
                        .inputLanguageResults(
                            PromptAnalyzerCreateResponse.Results.InputLanguageResults.builder()
                                .elapsedMs(0.0)
                                .language("language")
                                .verdict(true)
                                .build()
                        )
                        .inputPiiResults(
                            PromptAnalyzerCreateResponse.Results.InputPiiResults.builder()
                                .elapsedMs(20.0)
                                .addEntity("PHONE_NUMBER")
                                .verdict(true)
                                .build()
                        )
                        .inputUrlResults(
                            PromptAnalyzerCreateResponse.Results.InputUrlResults.builder()
                                .elapsedMs(0.0)
                                .addUrl("string")
                                .build()
                        )
                        .outputCodeResults(
                            PromptAnalyzerCreateResponse.Results.OutputCodeResults.builder()
                                .elapsedMs(0.0)
                                .verdict(true)
                                .build()
                        )
                        .outputPiiResults(
                            PromptAnalyzerCreateResponse.Results.OutputPiiResults.builder()
                                .elapsedMs(20.0)
                                .addEntity("LOCATION")
                                .verdict(true)
                                .build()
                        )
                        .outputUrlResults(
                            PromptAnalyzerCreateResponse.Results.OutputUrlResults.builder()
                                .elapsedMs(0.0)
                                .addUrl("string")
                                .build()
                        )
                        .addPromptInjectionClassifierResult(
                            PromptAnalyzerCreateResponse.Results.PromptInjectionClassifierResult
                                .builder()
                                .allowOverride("allow_override")
                                .blockOverride("block_override")
                                .elapsedMs(100.0)
                                .addProbability(1.0)
                                .verdict(true)
                                .version(1.0)
                                .build()
                        )
                        .build()
                )
                .upstreamElapsedMs(0.0)
                .verdict(true)
                .build()

        assertThat(promptAnalyzerCreateResponse.categories())
            .contains(
                PromptAnalyzerCreateResponse.Categories.builder()
                    .guardrail(true)
                    .inputCode(true)
                    .inputDos(true)
                    .inputLanguage(true)
                    .inputPii(true)
                    .outputCode(true)
                    .outputPii(true)
                    .promptInjection(true)
                    .unsafeInput(true)
                    .unsafeOutput(true)
                    .build()
            )
        assertThat(promptAnalyzerCreateResponse.elapsedMs()).contains(0.0)
        assertThat(promptAnalyzerCreateResponse.frameworks())
            .contains(
                PromptAnalyzerCreateResponse.Frameworks.builder()
                    .addMitre(
                        PromptAnalyzerCreateResponse.Frameworks.Mitre.builder()
                            .label("AML.T0051")
                            .name("LLM Prompt Injection")
                            .build()
                    )
                    .addOwasp(
                        PromptAnalyzerCreateResponse.Frameworks.Owasp.builder()
                            .label("LLM01")
                            .name("Prompt Injection")
                            .build()
                    )
                    .addOwasp2025(
                        PromptAnalyzerCreateResponse.Frameworks.Owasp2025.builder()
                            .label("LLM01:2025")
                            .name("Prompt Injection")
                            .build()
                    )
                    .build()
            )
        assertThat(promptAnalyzerCreateResponse.model()).contains("model")
        assertThat(promptAnalyzerCreateResponse.policy())
            .contains(
                PromptAnalyzerCreateResponse.Policy.builder()
                    .blockGuardrailDetection(true)
                    .blockInputCodeDetection(true)
                    .blockInputDosDetection(true)
                    .blockInputPii(true)
                    .blockOutputCodeDetection(true)
                    .blockOutputPii(true)
                    .blockPromptInjection(true)
                    .blockUnsafe(true)
                    .blockUnsafeInput(true)
                    .blockUnsafeOutput(true)
                    .entityType(PromptAnalyzerCreateResponse.Policy.EntityType.STRICT)
                    .inputDosDetectionThreshold(4096.0)
                    .promptInjectionScanType(
                        PromptAnalyzerCreateResponse.Policy.PromptInjectionScanType.QUICK
                    )
                    .redactInputPii(true)
                    .redactOutputPii(true)
                    .redactType(PromptAnalyzerCreateResponse.Policy.RedactType.ENTITY)
                    .skipGuardrailDetection(true)
                    .skipInputCodeDetection(true)
                    .skipInputDosDetection(true)
                    .skipInputPiiDetection(true)
                    .skipInputUrlDetection(true)
                    .skipOutputCodeDetection(true)
                    .skipOutputPiiDetection(true)
                    .skipOutputUrlDetection(true)
                    .skipPromptInjectionDetection(true)
                    .build()
            )
        assertThat(promptAnalyzerCreateResponse.provider()).contains("provider")
        assertThat(promptAnalyzerCreateResponse.response())
            .contains(
                PromptAnalyzerCreateResponse.Response.builder()
                    .model("model")
                    .output("output")
                    .prompt("prompt")
                    .provider("provider")
                    .unmodifiedOutput("unmodified_output")
                    .unmodifiedPrompt("unmodified_prompt")
                    .build()
            )
        assertThat(promptAnalyzerCreateResponse.results())
            .contains(
                PromptAnalyzerCreateResponse.Results.builder()
                    .guardrailResults(
                        PromptAnalyzerCreateResponse.Results.GuardrailResults.builder()
                            .elapsedMs(0.0)
                            .refusalClassifierResults(
                                PromptAnalyzerCreateResponse.Results.GuardrailResults
                                    .RefusalClassifierResults
                                    .builder()
                                    .elapsedMs(0.0)
                                    .addProbability(0.0)
                                    .verdict(true)
                                    .version(0.0)
                                    .build()
                            )
                            .verdict(true)
                            .build()
                    )
                    .inputBlockListResults(
                        PromptAnalyzerCreateResponse.Results.InputBlockListResults.builder()
                            .elapsedMs(10.0)
                            .addMatch("badToken")
                            .verdict(true)
                            .build()
                    )
                    .inputCodeResults(
                        PromptAnalyzerCreateResponse.Results.InputCodeResults.builder()
                            .elapsedMs(0.0)
                            .verdict(true)
                            .build()
                    )
                    .inputDosResults(
                        PromptAnalyzerCreateResponse.Results.InputDosResults.builder()
                            .elapsedMs(0.0)
                            .embeddingsLength(0.0)
                            .verdict(true)
                            .build()
                    )
                    .inputLanguageResults(
                        PromptAnalyzerCreateResponse.Results.InputLanguageResults.builder()
                            .elapsedMs(0.0)
                            .language("language")
                            .verdict(true)
                            .build()
                    )
                    .inputPiiResults(
                        PromptAnalyzerCreateResponse.Results.InputPiiResults.builder()
                            .elapsedMs(20.0)
                            .addEntity("PHONE_NUMBER")
                            .verdict(true)
                            .build()
                    )
                    .inputUrlResults(
                        PromptAnalyzerCreateResponse.Results.InputUrlResults.builder()
                            .elapsedMs(0.0)
                            .addUrl("string")
                            .build()
                    )
                    .outputCodeResults(
                        PromptAnalyzerCreateResponse.Results.OutputCodeResults.builder()
                            .elapsedMs(0.0)
                            .verdict(true)
                            .build()
                    )
                    .outputPiiResults(
                        PromptAnalyzerCreateResponse.Results.OutputPiiResults.builder()
                            .elapsedMs(20.0)
                            .addEntity("LOCATION")
                            .verdict(true)
                            .build()
                    )
                    .outputUrlResults(
                        PromptAnalyzerCreateResponse.Results.OutputUrlResults.builder()
                            .elapsedMs(0.0)
                            .addUrl("string")
                            .build()
                    )
                    .addPromptInjectionClassifierResult(
                        PromptAnalyzerCreateResponse.Results.PromptInjectionClassifierResult
                            .builder()
                            .allowOverride("allow_override")
                            .blockOverride("block_override")
                            .elapsedMs(100.0)
                            .addProbability(1.0)
                            .verdict(true)
                            .version(1.0)
                            .build()
                    )
                    .build()
            )
        assertThat(promptAnalyzerCreateResponse.upstreamElapsedMs()).contains(0.0)
        assertThat(promptAnalyzerCreateResponse.verdict()).contains(true)
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val promptAnalyzerCreateResponse =
            PromptAnalyzerCreateResponse.builder()
                .categories(
                    PromptAnalyzerCreateResponse.Categories.builder()
                        .guardrail(true)
                        .inputCode(true)
                        .inputDos(true)
                        .inputLanguage(true)
                        .inputPii(true)
                        .outputCode(true)
                        .outputPii(true)
                        .promptInjection(true)
                        .unsafeInput(true)
                        .unsafeOutput(true)
                        .build()
                )
                .elapsedMs(0.0)
                .frameworks(
                    PromptAnalyzerCreateResponse.Frameworks.builder()
                        .addMitre(
                            PromptAnalyzerCreateResponse.Frameworks.Mitre.builder()
                                .label("AML.T0051")
                                .name("LLM Prompt Injection")
                                .build()
                        )
                        .addOwasp(
                            PromptAnalyzerCreateResponse.Frameworks.Owasp.builder()
                                .label("LLM01")
                                .name("Prompt Injection")
                                .build()
                        )
                        .addOwasp2025(
                            PromptAnalyzerCreateResponse.Frameworks.Owasp2025.builder()
                                .label("LLM01:2025")
                                .name("Prompt Injection")
                                .build()
                        )
                        .build()
                )
                .model("model")
                .policy(
                    PromptAnalyzerCreateResponse.Policy.builder()
                        .blockGuardrailDetection(true)
                        .blockInputCodeDetection(true)
                        .blockInputDosDetection(true)
                        .blockInputPii(true)
                        .blockOutputCodeDetection(true)
                        .blockOutputPii(true)
                        .blockPromptInjection(true)
                        .blockUnsafe(true)
                        .blockUnsafeInput(true)
                        .blockUnsafeOutput(true)
                        .entityType(PromptAnalyzerCreateResponse.Policy.EntityType.STRICT)
                        .inputDosDetectionThreshold(4096.0)
                        .promptInjectionScanType(
                            PromptAnalyzerCreateResponse.Policy.PromptInjectionScanType.QUICK
                        )
                        .redactInputPii(true)
                        .redactOutputPii(true)
                        .redactType(PromptAnalyzerCreateResponse.Policy.RedactType.ENTITY)
                        .skipGuardrailDetection(true)
                        .skipInputCodeDetection(true)
                        .skipInputDosDetection(true)
                        .skipInputPiiDetection(true)
                        .skipInputUrlDetection(true)
                        .skipOutputCodeDetection(true)
                        .skipOutputPiiDetection(true)
                        .skipOutputUrlDetection(true)
                        .skipPromptInjectionDetection(true)
                        .build()
                )
                .provider("provider")
                .response(
                    PromptAnalyzerCreateResponse.Response.builder()
                        .model("model")
                        .output("output")
                        .prompt("prompt")
                        .provider("provider")
                        .unmodifiedOutput("unmodified_output")
                        .unmodifiedPrompt("unmodified_prompt")
                        .build()
                )
                .results(
                    PromptAnalyzerCreateResponse.Results.builder()
                        .guardrailResults(
                            PromptAnalyzerCreateResponse.Results.GuardrailResults.builder()
                                .elapsedMs(0.0)
                                .refusalClassifierResults(
                                    PromptAnalyzerCreateResponse.Results.GuardrailResults
                                        .RefusalClassifierResults
                                        .builder()
                                        .elapsedMs(0.0)
                                        .addProbability(0.0)
                                        .verdict(true)
                                        .version(0.0)
                                        .build()
                                )
                                .verdict(true)
                                .build()
                        )
                        .inputBlockListResults(
                            PromptAnalyzerCreateResponse.Results.InputBlockListResults.builder()
                                .elapsedMs(10.0)
                                .addMatch("badToken")
                                .verdict(true)
                                .build()
                        )
                        .inputCodeResults(
                            PromptAnalyzerCreateResponse.Results.InputCodeResults.builder()
                                .elapsedMs(0.0)
                                .verdict(true)
                                .build()
                        )
                        .inputDosResults(
                            PromptAnalyzerCreateResponse.Results.InputDosResults.builder()
                                .elapsedMs(0.0)
                                .embeddingsLength(0.0)
                                .verdict(true)
                                .build()
                        )
                        .inputLanguageResults(
                            PromptAnalyzerCreateResponse.Results.InputLanguageResults.builder()
                                .elapsedMs(0.0)
                                .language("language")
                                .verdict(true)
                                .build()
                        )
                        .inputPiiResults(
                            PromptAnalyzerCreateResponse.Results.InputPiiResults.builder()
                                .elapsedMs(20.0)
                                .addEntity("PHONE_NUMBER")
                                .verdict(true)
                                .build()
                        )
                        .inputUrlResults(
                            PromptAnalyzerCreateResponse.Results.InputUrlResults.builder()
                                .elapsedMs(0.0)
                                .addUrl("string")
                                .build()
                        )
                        .outputCodeResults(
                            PromptAnalyzerCreateResponse.Results.OutputCodeResults.builder()
                                .elapsedMs(0.0)
                                .verdict(true)
                                .build()
                        )
                        .outputPiiResults(
                            PromptAnalyzerCreateResponse.Results.OutputPiiResults.builder()
                                .elapsedMs(20.0)
                                .addEntity("LOCATION")
                                .verdict(true)
                                .build()
                        )
                        .outputUrlResults(
                            PromptAnalyzerCreateResponse.Results.OutputUrlResults.builder()
                                .elapsedMs(0.0)
                                .addUrl("string")
                                .build()
                        )
                        .addPromptInjectionClassifierResult(
                            PromptAnalyzerCreateResponse.Results.PromptInjectionClassifierResult
                                .builder()
                                .allowOverride("allow_override")
                                .blockOverride("block_override")
                                .elapsedMs(100.0)
                                .addProbability(1.0)
                                .verdict(true)
                                .version(1.0)
                                .build()
                        )
                        .build()
                )
                .upstreamElapsedMs(0.0)
                .verdict(true)
                .build()

        val roundtrippedPromptAnalyzerCreateResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(promptAnalyzerCreateResponse),
                jacksonTypeRef<PromptAnalyzerCreateResponse>(),
            )

        assertThat(roundtrippedPromptAnalyzerCreateResponse).isEqualTo(promptAnalyzerCreateResponse)
    }
}
