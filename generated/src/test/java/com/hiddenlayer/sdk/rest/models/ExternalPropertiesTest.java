/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hiddenlayer.sdk.rest.models.Address;
import com.hiddenlayer.sdk.rest.models.Artifact;
import com.hiddenlayer.sdk.rest.models.Conversion;
import com.hiddenlayer.sdk.rest.models.Graph;
import com.hiddenlayer.sdk.rest.models.Invocation;
import com.hiddenlayer.sdk.rest.models.LogicalLocation;
import com.hiddenlayer.sdk.rest.models.PropertyBag;
import com.hiddenlayer.sdk.rest.models.Result;
import com.hiddenlayer.sdk.rest.models.ThreadFlowLocation;
import com.hiddenlayer.sdk.rest.models.ToolComponent;
import com.hiddenlayer.sdk.rest.models.WebRequest;
import com.hiddenlayer.sdk.rest.models.WebResponse;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExternalProperties
 */
class ExternalPropertiesTest {
    private final ExternalProperties model = new ExternalProperties();

    /**
     * Model tests for ExternalProperties
     */
    @Test
    void testExternalProperties() {
        // TODO: test ExternalProperties
    }

    /**
     * Test the property 'schema'
     */
    @Test
    void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'version'
     */
    @Test
    void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'guid'
     */
    @Test
    void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'runGuid'
     */
    @Test
    void runGuidTest() {
        // TODO: test runGuid
    }

    /**
     * Test the property 'conversion'
     */
    @Test
    void conversionTest() {
        // TODO: test conversion
    }

    /**
     * Test the property 'graphs'
     */
    @Test
    void graphsTest() {
        // TODO: test graphs
    }

    /**
     * Test the property 'externalizedProperties'
     */
    @Test
    void externalizedPropertiesTest() {
        // TODO: test externalizedProperties
    }

    /**
     * Test the property 'artifacts'
     */
    @Test
    void artifactsTest() {
        // TODO: test artifacts
    }

    /**
     * Test the property 'invocations'
     */
    @Test
    void invocationsTest() {
        // TODO: test invocations
    }

    /**
     * Test the property 'logicalLocations'
     */
    @Test
    void logicalLocationsTest() {
        // TODO: test logicalLocations
    }

    /**
     * Test the property 'threadFlowLocations'
     */
    @Test
    void threadFlowLocationsTest() {
        // TODO: test threadFlowLocations
    }

    /**
     * Test the property 'results'
     */
    @Test
    void resultsTest() {
        // TODO: test results
    }

    /**
     * Test the property 'taxonomies'
     */
    @Test
    void taxonomiesTest() {
        // TODO: test taxonomies
    }

    /**
     * Test the property 'driver'
     */
    @Test
    void driverTest() {
        // TODO: test driver
    }

    /**
     * Test the property 'extensions'
     */
    @Test
    void extensionsTest() {
        // TODO: test extensions
    }

    /**
     * Test the property 'policies'
     */
    @Test
    void policiesTest() {
        // TODO: test policies
    }

    /**
     * Test the property 'translations'
     */
    @Test
    void translationsTest() {
        // TODO: test translations
    }

    /**
     * Test the property 'addresses'
     */
    @Test
    void addressesTest() {
        // TODO: test addresses
    }

    /**
     * Test the property 'webRequests'
     */
    @Test
    void webRequestsTest() {
        // TODO: test webRequests
    }

    /**
     * Test the property 'webResponses'
     */
    @Test
    void webResponsesTest() {
        // TODO: test webResponses
    }

    /**
     * Test the property 'properties'
     */
    @Test
    void propertiesTest() {
        // TODO: test properties
    }

}
