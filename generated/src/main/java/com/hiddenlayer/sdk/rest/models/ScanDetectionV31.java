/*
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiddenlayer.sdk.rest.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hiddenlayer.sdk.rest.models.MITREAtlasInner;
import com.hiddenlayer.sdk.rest.models.RuleDetailsInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ScanDetectionV31
 */
@JsonPropertyOrder({
  ScanDetectionV31.JSON_PROPERTY_DETECTION_ID,
  ScanDetectionV31.JSON_PROPERTY_RULE_ID,
  ScanDetectionV31.JSON_PROPERTY_RISK,
  ScanDetectionV31.JSON_PROPERTY_CATEGORY,
  ScanDetectionV31.JSON_PROPERTY_DESCRIPTION,
  ScanDetectionV31.JSON_PROPERTY_LIKELIHOOD,
  ScanDetectionV31.JSON_PROPERTY_IMPACT,
  ScanDetectionV31.JSON_PROPERTY_SEVERITY,
  ScanDetectionV31.JSON_PROPERTY_RULE_DETAILS,
  ScanDetectionV31.JSON_PROPERTY_MITRE_ATLAS,
  ScanDetectionV31.JSON_PROPERTY_OWASP,
  ScanDetectionV31.JSON_PROPERTY_CVE,
  ScanDetectionV31.JSON_PROPERTY_CWE,
  ScanDetectionV31.JSON_PROPERTY_CWE_HREF,
  ScanDetectionV31.JSON_PROPERTY_TECHNICAL_BLOG_HREFS,
  ScanDetectionV31.JSON_PROPERTY_TECHNICAL_BLOG_HREF
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-02T17:04:04.425318Z[GMT]", comments = "Generator version: 7.6.0")
public class ScanDetectionV31 {
  public static final String JSON_PROPERTY_DETECTION_ID = "detection_id";
  private UUID detectionId;

  public static final String JSON_PROPERTY_RULE_ID = "rule_id";
  private String ruleId;

  /**
   * detection risk
   */
  public enum RiskEnum {
    MALICIOUS("MALICIOUS"),
    
    SUSPICIOUS("SUSPICIOUS");

    private String value;

    RiskEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RiskEnum fromValue(String value) {
      for (RiskEnum b : RiskEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RISK = "risk";
  private RiskEnum risk;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LIKELIHOOD = "likelihood";
  private String likelihood;

  public static final String JSON_PROPERTY_IMPACT = "impact";
  private String impact;

  /**
   * detection severity
   */
  public enum SeverityEnum {
    LOW("low"),
    
    MEDIUM("medium"),
    
    HIGH("high"),
    
    CRITICAL("critical");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SeverityEnum fromValue(String value) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEVERITY = "severity";
  private SeverityEnum severity;

  public static final String JSON_PROPERTY_RULE_DETAILS = "rule_details";
  private List<RuleDetailsInner> ruleDetails = new ArrayList<>();

  public static final String JSON_PROPERTY_MITRE_ATLAS = "mitre_atlas";
  private List<MITREAtlasInner> mitreAtlas = new ArrayList<>();

  public static final String JSON_PROPERTY_OWASP = "owasp";
  private List<String> owasp = new ArrayList<>();

  public static final String JSON_PROPERTY_CVE = "cve";
  private List<String> cve = new ArrayList<>();

  public static final String JSON_PROPERTY_CWE = "cwe";
  private String cwe;

  public static final String JSON_PROPERTY_CWE_HREF = "cwe_href";
  private String cweHref;

  public static final String JSON_PROPERTY_TECHNICAL_BLOG_HREFS = "technical_blog_hrefs";
  private List<String> technicalBlogHrefs = new ArrayList<>();

  public static final String JSON_PROPERTY_TECHNICAL_BLOG_HREF = "technical_blog_href";
  private String technicalBlogHref;

  public ScanDetectionV31() { 
  }

  public ScanDetectionV31 detectionId(UUID detectionId) {
    this.detectionId = detectionId;
    return this;
  }

   /**
   * unique identifier for the detection
   * @return detectionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DETECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getDetectionId() {
    return detectionId;
  }


  @JsonProperty(JSON_PROPERTY_DETECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDetectionId(UUID detectionId) {
    this.detectionId = detectionId;
  }


  public ScanDetectionV31 ruleId(String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

   /**
   * unique identifier for the rule that sourced the detection
   * @return ruleId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRuleId() {
    return ruleId;
  }


  @JsonProperty(JSON_PROPERTY_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRuleId(String ruleId) {
    this.ruleId = ruleId;
  }


  public ScanDetectionV31 risk(RiskEnum risk) {
    this.risk = risk;
    return this;
  }

   /**
   * detection risk
   * @return risk
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RISK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RiskEnum getRisk() {
    return risk;
  }


  @JsonProperty(JSON_PROPERTY_RISK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRisk(RiskEnum risk) {
    this.risk = risk;
  }


  public ScanDetectionV31 category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Vulnerability category for the detection
   * @return category
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategory(String category) {
    this.category = category;
  }


  public ScanDetectionV31 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * detection description
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ScanDetectionV31 likelihood(String likelihood) {
    this.likelihood = likelihood;
    return this;
  }

   /**
   * detection likelihood
   * @return likelihood
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIKELIHOOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLikelihood() {
    return likelihood;
  }


  @JsonProperty(JSON_PROPERTY_LIKELIHOOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLikelihood(String likelihood) {
    this.likelihood = likelihood;
  }


  public ScanDetectionV31 impact(String impact) {
    this.impact = impact;
    return this;
  }

   /**
   * detection impact
   * @return impact
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMPACT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getImpact() {
    return impact;
  }


  @JsonProperty(JSON_PROPERTY_IMPACT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImpact(String impact) {
    this.impact = impact;
  }


  public ScanDetectionV31 severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

   /**
   * detection severity
   * @return severity
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEVERITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SeverityEnum getSeverity() {
    return severity;
  }


  @JsonProperty(JSON_PROPERTY_SEVERITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }


  public ScanDetectionV31 ruleDetails(List<RuleDetailsInner> ruleDetails) {
    this.ruleDetails = ruleDetails;
    return this;
  }

  public ScanDetectionV31 addRuleDetailsItem(RuleDetailsInner ruleDetailsItem) {
    if (this.ruleDetails == null) {
      this.ruleDetails = new ArrayList<>();
    }
    this.ruleDetails.add(ruleDetailsItem);
    return this;
  }

   /**
   * Get ruleDetails
   * @return ruleDetails
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RULE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RuleDetailsInner> getRuleDetails() {
    return ruleDetails;
  }


  @JsonProperty(JSON_PROPERTY_RULE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleDetails(List<RuleDetailsInner> ruleDetails) {
    this.ruleDetails = ruleDetails;
  }


  public ScanDetectionV31 mitreAtlas(List<MITREAtlasInner> mitreAtlas) {
    this.mitreAtlas = mitreAtlas;
    return this;
  }

  public ScanDetectionV31 addMitreAtlasItem(MITREAtlasInner mitreAtlasItem) {
    if (this.mitreAtlas == null) {
      this.mitreAtlas = new ArrayList<>();
    }
    this.mitreAtlas.add(mitreAtlasItem);
    return this;
  }

   /**
   * Get mitreAtlas
   * @return mitreAtlas
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MITRE_ATLAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MITREAtlasInner> getMitreAtlas() {
    return mitreAtlas;
  }


  @JsonProperty(JSON_PROPERTY_MITRE_ATLAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMitreAtlas(List<MITREAtlasInner> mitreAtlas) {
    this.mitreAtlas = mitreAtlas;
  }


  public ScanDetectionV31 owasp(List<String> owasp) {
    this.owasp = owasp;
    return this;
  }

  public ScanDetectionV31 addOwaspItem(String owaspItem) {
    if (this.owasp == null) {
      this.owasp = new ArrayList<>();
    }
    this.owasp.add(owaspItem);
    return this;
  }

   /**
   * Get owasp
   * @return owasp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OWASP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getOwasp() {
    return owasp;
  }


  @JsonProperty(JSON_PROPERTY_OWASP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwasp(List<String> owasp) {
    this.owasp = owasp;
  }


  public ScanDetectionV31 cve(List<String> cve) {
    this.cve = cve;
    return this;
  }

  public ScanDetectionV31 addCveItem(String cveItem) {
    if (this.cve == null) {
      this.cve = new ArrayList<>();
    }
    this.cve.add(cveItem);
    return this;
  }

   /**
   * Get cve
   * @return cve
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getCve() {
    return cve;
  }


  @JsonProperty(JSON_PROPERTY_CVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCve(List<String> cve) {
    this.cve = cve;
  }


  public ScanDetectionV31 cwe(String cwe) {
    this.cwe = cwe;
    return this;
  }

   /**
   * Get cwe
   * @return cwe
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CWE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCwe() {
    return cwe;
  }


  @JsonProperty(JSON_PROPERTY_CWE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCwe(String cwe) {
    this.cwe = cwe;
  }


  public ScanDetectionV31 cweHref(String cweHref) {
    this.cweHref = cweHref;
    return this;
  }

   /**
   * CWE URL for the detection
   * @return cweHref
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CWE_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCweHref() {
    return cweHref;
  }


  @JsonProperty(JSON_PROPERTY_CWE_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCweHref(String cweHref) {
    this.cweHref = cweHref;
  }


  public ScanDetectionV31 technicalBlogHrefs(List<String> technicalBlogHrefs) {
    this.technicalBlogHrefs = technicalBlogHrefs;
    return this;
  }

  public ScanDetectionV31 addTechnicalBlogHrefsItem(String technicalBlogHrefsItem) {
    if (this.technicalBlogHrefs == null) {
      this.technicalBlogHrefs = new ArrayList<>();
    }
    this.technicalBlogHrefs.add(technicalBlogHrefsItem);
    return this;
  }

   /**
   * Hiddenlayer Technical Blog URLs for the detection
   * @return technicalBlogHrefs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TECHNICAL_BLOG_HREFS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTechnicalBlogHrefs() {
    return technicalBlogHrefs;
  }


  @JsonProperty(JSON_PROPERTY_TECHNICAL_BLOG_HREFS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnicalBlogHrefs(List<String> technicalBlogHrefs) {
    this.technicalBlogHrefs = technicalBlogHrefs;
  }


  public ScanDetectionV31 technicalBlogHref(String technicalBlogHref) {
    this.technicalBlogHref = technicalBlogHref;
    return this;
  }

   /**
   * Hiddenlayer Technical Blog URL for the detection
   * @return technicalBlogHref
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TECHNICAL_BLOG_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTechnicalBlogHref() {
    return technicalBlogHref;
  }


  @JsonProperty(JSON_PROPERTY_TECHNICAL_BLOG_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnicalBlogHref(String technicalBlogHref) {
    this.technicalBlogHref = technicalBlogHref;
  }


  /**
   * Return true if this ScanDetectionV3_1 object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScanDetectionV31 scanDetectionV31 = (ScanDetectionV31) o;
    return Objects.equals(this.detectionId, scanDetectionV31.detectionId) &&
        Objects.equals(this.ruleId, scanDetectionV31.ruleId) &&
        Objects.equals(this.risk, scanDetectionV31.risk) &&
        Objects.equals(this.category, scanDetectionV31.category) &&
        Objects.equals(this.description, scanDetectionV31.description) &&
        Objects.equals(this.likelihood, scanDetectionV31.likelihood) &&
        Objects.equals(this.impact, scanDetectionV31.impact) &&
        Objects.equals(this.severity, scanDetectionV31.severity) &&
        Objects.equals(this.ruleDetails, scanDetectionV31.ruleDetails) &&
        Objects.equals(this.mitreAtlas, scanDetectionV31.mitreAtlas) &&
        Objects.equals(this.owasp, scanDetectionV31.owasp) &&
        Objects.equals(this.cve, scanDetectionV31.cve) &&
        Objects.equals(this.cwe, scanDetectionV31.cwe) &&
        Objects.equals(this.cweHref, scanDetectionV31.cweHref) &&
        Objects.equals(this.technicalBlogHrefs, scanDetectionV31.technicalBlogHrefs) &&
        Objects.equals(this.technicalBlogHref, scanDetectionV31.technicalBlogHref);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectionId, ruleId, risk, category, description, likelihood, impact, severity, ruleDetails, mitreAtlas, owasp, cve, cwe, cweHref, technicalBlogHrefs, technicalBlogHref);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScanDetectionV31 {\n");
    sb.append("    detectionId: ").append(toIndentedString(detectionId)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    likelihood: ").append(toIndentedString(likelihood)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    ruleDetails: ").append(toIndentedString(ruleDetails)).append("\n");
    sb.append("    mitreAtlas: ").append(toIndentedString(mitreAtlas)).append("\n");
    sb.append("    owasp: ").append(toIndentedString(owasp)).append("\n");
    sb.append("    cve: ").append(toIndentedString(cve)).append("\n");
    sb.append("    cwe: ").append(toIndentedString(cwe)).append("\n");
    sb.append("    cweHref: ").append(toIndentedString(cweHref)).append("\n");
    sb.append("    technicalBlogHrefs: ").append(toIndentedString(technicalBlogHrefs)).append("\n");
    sb.append("    technicalBlogHref: ").append(toIndentedString(technicalBlogHref)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `detection_id` to the URL query string
    if (getDetectionId() != null) {
      joiner.add(String.format("%sdetection_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDetectionId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rule_id` to the URL query string
    if (getRuleId() != null) {
      joiner.add(String.format("%srule_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRuleId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `risk` to the URL query string
    if (getRisk() != null) {
      joiner.add(String.format("%srisk%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRisk()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `category` to the URL query string
    if (getCategory() != null) {
      joiner.add(String.format("%scategory%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCategory()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `likelihood` to the URL query string
    if (getLikelihood() != null) {
      joiner.add(String.format("%slikelihood%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLikelihood()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `impact` to the URL query string
    if (getImpact() != null) {
      joiner.add(String.format("%simpact%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getImpact()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `severity` to the URL query string
    if (getSeverity() != null) {
      joiner.add(String.format("%sseverity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSeverity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rule_details` to the URL query string
    if (getRuleDetails() != null) {
      for (int i = 0; i < getRuleDetails().size(); i++) {
        if (getRuleDetails().get(i) != null) {
          joiner.add(getRuleDetails().get(i).toUrlQueryString(String.format("%srule_details%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `mitre_atlas` to the URL query string
    if (getMitreAtlas() != null) {
      for (int i = 0; i < getMitreAtlas().size(); i++) {
        if (getMitreAtlas().get(i) != null) {
          joiner.add(getMitreAtlas().get(i).toUrlQueryString(String.format("%smitre_atlas%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `owasp` to the URL query string
    if (getOwasp() != null) {
      for (int i = 0; i < getOwasp().size(); i++) {
        joiner.add(String.format("%sowasp%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getOwasp().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `cve` to the URL query string
    if (getCve() != null) {
      for (int i = 0; i < getCve().size(); i++) {
        joiner.add(String.format("%scve%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getCve().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `cwe` to the URL query string
    if (getCwe() != null) {
      joiner.add(String.format("%scwe%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCwe()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cwe_href` to the URL query string
    if (getCweHref() != null) {
      joiner.add(String.format("%scwe_href%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCweHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `technical_blog_hrefs` to the URL query string
    if (getTechnicalBlogHrefs() != null) {
      for (int i = 0; i < getTechnicalBlogHrefs().size(); i++) {
        joiner.add(String.format("%stechnical_blog_hrefs%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getTechnicalBlogHrefs().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `technical_blog_href` to the URL query string
    if (getTechnicalBlogHref() != null) {
      joiner.add(String.format("%stechnical_blog_href%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTechnicalBlogHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

